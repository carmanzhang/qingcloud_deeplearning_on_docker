FROM nvidia/cuda:9.1-devel-ubuntu16.04
LABEL maintainer "carman <carmanzhang@yunify.com>"

RUN echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list

ENV CUDNN_VERSION 7.1.3.16
LABEL com.nvidia.cudnn.version="${CUDNN_VERSION}"

Run apt-get update && apt-get install -y --no-install-recommends \
        software-properties-common  && \
     apt-get clean

# Pick up some TF dependencies
RUN add-apt-repository ppa:jonathonf/python-3.6 && \
        apt-get update && \
        apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        apt-utils \
        python3.6 \
        python3.6-dev \
        rsync \
        zlib1g-dev \
        libhdf5-serial-dev \
        libpng12-0  \
        libpng12-dev \
        libzmq3-dev \
        libfreetype6  \
        libfreetype6-dev \
        pkg-config \
        python \
        python-dev \
        unzip \
        libcudnn7=$CUDNN_VERSION-1+cuda9.1 \
        libcudnn7-dev=$CUDNN_VERSION-1+cuda9.1 \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# remove python3.5 and link python3.6->python3
RUn apt-get -y purge --auto-remove python3.5 && \
        cd /usr/bin && \
        ln -s python3.6  python3  && \
        ln -s python3.6-config python3-config  && \
        ln -s python3.6m python3m  && \
        ln -s python3.6m-config python3m-config  && \
        ln -s x86_64-linux-gnu-python3.6-config x86_64-linux-gnu-python3-config  && \
        ln -s x86_64-linux-gnu-python3.6m-config x86_64-linux-gnu-python3m-config

# pip for for python2.7 or pip3 for python3.6
RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    # if install pip for python3.6, only need to change python -> python3.6
    python3.6 get-pip.py && \
    rm get-pip.py

RUN pip3 --no-cache-dir install \
        Pillow \
        h5py \
        ipykernel \
        jupyter \
        matplotlib \
        numpy \
        pandas \
        scipy \
        sklearn \
        keras \
        && \
    python3.6 -m ipykernel.kernelspec

# --- DO NOT EDIT OR DELETE BETWEEN THE LINES --- #
# These lines will be edited automatically by parameterized_docker_build.sh. #
# COPY _PIP_FILE_ /
# RUN pip --no-cache-dir install /_PIP_FILE_
# RUN rm -f /_PIP_FILE_

# Install TensorFlow GPU version.
RUN pip3 --no-cache-dir install \
    https://appcenter-deeplearning.sh1a.qingstor.com/tensorflow/tensorflow-1.8.0-cp36-cp36m-linux_x86_64.whl

# --- ~ DO NOT EDIT OR DELETE BETWEEN THE LINES --- #

# RUN ln -s -f /usr/bin/python3 /usr/bin/python#

# Set up our notebook config.
COPY jupyter_notebook_config.py /root/.jupyter/

# Copy sample notebooks.
COPY notebooks /notebooks

# Jupyter has issues with being run directly:
#   https://github.com/ipython/ipython/issues/7062
# We just add a little wrapper script.
COPY run_jupyter.sh /

# For CUDA profiling, TensorFlow requires CUPTI.
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH

# TensorBoard
EXPOSE 6006
# IPython
EXPOSE 8888

#WORKDIR "/notebooks"
WORKDIR "/"

#CMD ["/run_jupyter.sh", "--allow-root"]
